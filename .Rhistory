#?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
#Faceting
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
#?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
library(jsonlite)
library(tidyverse)
#Faceting
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
#?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
#Qualitative test for normality
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
?shapiro.test()
#Quantitative test for normality
#?shapiro.test()
shapiro.test(mtcars$wt)
source("~/Documents/Professional/Bootcamptec/Module15/R_Analysis/01_Demo/Demo.R")
x <- 5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='demo.json')
filter_table <- demo_table2[demo_table2$price > 10000]
filter_table1 <- demo_table2[demo_table2$price > 10000,]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
demo_table[sample(1:nrow(demo_table), 3),]
#library(tidyverse)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
demo_table4 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
#long_table <- demo_table3 %>% gather(key="Metric",value="Score",buying_price:popularity)
wide_table <- long_table %>% spread(key="Metric",value="Score")
#all.equal(demo_table3,wide_table) --> verify the tables
#table <-demo_table3[,order(colnames(wide_table))] --> sort the columns
#table <- demo_table3[,(colnames(wide_table))] --> sort the columns 2
#bar plot
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar()
#Compare data
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_col() #plot a bar plot
#Add labels to the plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +#plot bar plot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
#line plot, compare
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
plt + geom_line() #generate the plot
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels and scale
#scatter plot
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv, size=cyl)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of drive", size="Time") #add scatter plot with multiple aesthetics
#Box plot
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
#Set of box plots
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=drv)) #import dataset into ggplot2
plt + geom_boxplot(outlier.colour="red") + theme(axis.text.x=element_text(angle=45,hjust=1)) +labs(color="Type of drive") #add boxplot and rotate x-axis labels 45 degrees
#Heat map
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
#Layering plots that use the same variables and input data
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
#Layering plots that use different but complementary data
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
#Faceting
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
#?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
#Qualitative test for normality
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
#Quantitative test for normality
#?shapiro.test()
shapiro.test(mtcars$wt)
source("~/Documents/Professional/Bootcamptec/Module15/R_Analysis/01_Demo/Demo.R")
source("~/Documents/Professional/Bootcamptec/Module15/R_Analysis/01_Demo/Demo.R")
?sample_n()
opulation_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
opulation_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
read.csv
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
opulation_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
library(jsonlite)
library(tidyverse)
opulation_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
library(jsonlite)
library(tidyverse)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
library(jsonlite)
library(tidyverse)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F, stringsAsFactors = F) #import used car dataset
source("~/Documents/Professional/Bootcamptec/Module15/R_Analysis/01_Demo/Demo.R")
setwd("~/Documents/Professional/Bootcamptec/Module15/MechaCar_Statistical_Analysis")
?library()
library(jsonlite)
library(tidyverse)
Mechacar_data <- read.csv(file='MechaCar_mpg.csv')
View(Mechacar_data)
View(mpg_long)
View(mpg_summary)
View(plt)
mechacar_data <- read.csv(file='MechaCar_mpg.csv')
model <- lm(mpg ~ vehicle_lenght + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecharcar_data) #create the model
model <- lm(mpg ~ vehicle_lenght + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar_data) #create the model
model <- lm(mpg ~ vehicle_length + vehicle_weigth + spoiler_angle + ground_clearance + AWD, data=mechacar_data) #create the model
model <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar_data) #create the model
View(model)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar_data))
#Deliverable 2
supension_data <- read.csv('Suspension_Coil.csv')
View(supension_data)
total_summary <- summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
total_summary <- summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
total_summary <- summarize(Mean=mean(psi), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
total_summary <- summarize(Mean=mean(psi), .groups = 'keep')
total_summary <- group_by(PSI) %>% summarize(Mean=mean(psi), .groups = 'keep')
total_summary <- PSI %>% group_by(PSI) %>% summarize(Mean=mean(psi), .groups = 'keep')
total_summary <- summarize(Mean=mean(psi), .groups = 'keep')
total_summary <- supension_data %>% group_by(PSI) %>% summarize(Mean=mean(psi), .groups = 'keep')
total_summary <- supension_data %>% group_by(PSI) %>% summarize(Mean=mean(PSI), .groups = 'keep')
View(total_summary)
total_summary <- supension_data %>% summarize(Mean=mean(PSI), .groups = 'keep')
total_summary <- supension_data %>% summarize(Mean=mean(PSI), Median(Median=median(PSI)) .groups = 'keep')
total_summary <- supension_data %>% summarize(Mean=mean(PSI), Median(Median=median(PSI)), .groups = 'keep')
total_summary <- supension_data %>% summarize(Mean=mean(PSI), Median=median(PSI), .groups = 'keep')
total_summary <- supension_data %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=variance(PSI), SD=sd(PSI) ,.groups = 'keep')
total_summary <- supension_data %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI) ,.groups = 'keep')
lot_summary <- supension_data %>% group_by(Manufacturing_Lot) %>%summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI) ,.groups = 'keep')
View(lot_summary)
#Deliverable 3
t.test(supension_data$PSI)
#Deliverable 3
plt <- ggplot(supension_data, aes(x=PSI))
plt + geom_density()
t.test(supension_data$PSI)
#T test per lot
lot_data <- ssubset(supension_data, Manufacturing_Lot=='Lot1')
#T test per lot
lot_data <- subset(supension_data, Manufacturing_Lot=='Lot1')
View(lot_data)
t.test(lot_data$PSI)
lot_data2 <- subset(supension_data, Manufacturing_Lot=='Lot2')
t.test(lot_data$PSI)
lot_data3 <- subset(supension_data, Manufacturing_Lot=='Lot3')
t.test(lot_data$PSI)
View(lot_data2)
View(lot_data3)
#T test per lot
lot_data <- subset(supension_data, Manufacturing_Lot=='Lot1')
lot_data2 <- subset(supension_data, Manufacturing_Lot=='Lot2')
lot_data3 <- subset(supension_data, Manufacturing_Lot=='Lot3')
t.test(lot_data$PSI)
t.test(lot_data2$PSI)
t.test(lot_data2$PSI)
t.test(lot_data$PSI)
t.test(lot_data2$PSI)
t.test(lot_data3$PSI)
t.test(supension_data$PSI)
t.test(supension_data$PSI, mu=1500)
t.test(lot_data$PSI, mu=1500)
t.test(lot_data2$PSI, mu=1500)
t.test(lot_data3$PSI, mu=1500)
